{"version":3,"file":"static/js/689.265cf246.chunk.js","mappings":"sKACA,MAA4B,6BAA5B,EAAuE,+BAAvE,EAAoH,+BAApH,EAAiK,+B,iBCG1J,SAASA,EAAUC,GAAc,IAAXC,EAAMD,EAANC,OAC3B,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAgBF,SAC5BH,EAAOM,KAAI,SAAAC,GACV,OACEN,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CACHC,GAAE,WAAAC,OAAaH,EAAMI,IAErBP,UAAWC,EAAcF,UAEzBF,EAAAA,EAAAA,KAAA,MAAmBG,UAAWC,EAAgBF,UAC5CS,EAAAA,EAAAA,MAAA,OAAKR,UAAWC,EAAcF,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OACEY,IAAG,mCAAAH,OAAqCH,EAAMO,aAC9CC,IAAKR,EAAMS,MACXA,MAAOT,EAAMS,MACbC,MAAM,SAERhB,EAAAA,EAAAA,KAAA,KAAGG,UAAWC,EAAgBF,SAAEI,EAAMS,YARjCT,EAAMI,KAHVJ,EAAMI,GAgBjB,OAIR,C,gFC/BA,GAAiB,E,SCAjB,GAAgB,KAAO,yB,SCGR,SAASO,EAASnB,GAAoB,IAAjBoB,EAAYpB,EAAZoB,aAClCC,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAU5B,OACErB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAAA,WAAeF,UAC7BF,EAAAA,EAAAA,KAAA,SACEyB,KAAK,OACLtB,UAAWC,EAAAA,aACXsB,YAAaH,EAAW,GAAK,wBAC7BI,QAfY,WAClBH,GAAY,EACd,EAcQI,OAZW,WACjBJ,GAAY,EACd,EAWQK,QAAS,SAAAC,GACY,UAAfA,EAAMC,MACRb,EAAaY,EAAME,OAAOC,MAE9B,OAKV,C,aC5Be,SAASC,IACtB,IAAAf,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BgB,EAAKd,EAAA,GAAEe,EAAQf,EAAA,GACtBgB,GAAwCjB,EAAAA,EAAAA,UAAS,IAAGkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAiBpC,OAXAG,EAAAA,EAAAA,YAAU,WACRC,MAAM,mDAADjC,OACgD0B,EAAK,8CAEvDQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAC,GACJJ,EAAgBI,EAASE,QAC3B,IACCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAM,GACxC,GAAG,CAACb,KAGFnC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACES,EAAAA,EAAAA,MAAA,OAAKR,UAAWC,EAAAA,gBAAoBF,SAAA,EAClCF,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAAA,YAAgBF,SAAC,kBACP,IAAxBqC,EAAaW,QACZlD,EAAAA,EAAAA,KAACiB,EAAS,CAACC,aApBE,SAAAY,GACnBM,EAASN,EACX,IAoBQ,IAEF9B,EAAAA,EAAAA,KAACH,EAAAA,EAAU,CAACE,OAAQwC,QAI5B,C","sources":["webpack://react-homework-template/./src/components/MoviesList/MovieList.module.css?dfe6","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.module.css","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_box\":\"MovieList_movie_box__Ltezo\",\"movies_list\":\"MovieList_movies_list__+ibTm\",\"movies_item\":\"MovieList_movies_item__xrSVS\",\"movie_title\":\"MovieList_movie_title__ZUwbv\"};","import css from './MovieList.module.css';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport function MoviesList({ movies }) {\n  return (\n    <>\n      <ul className={css.movies_list}>\n        {movies.map(movie => {\n          return (\n            <Link\n              to={`/movies/${movie.id}`}\n              key={movie.id}\n              className={css.movie_box}\n            >\n              <li key={movie.id} className={css.movies_item}>\n                <div className={css.movie_box}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                    alt={movie.title}\n                    title={movie.title}\n                    width=\"260\"\n                  />\n                  <p className={css.movie_title}>{movie.title}</p>\n                </div>\n              </li>\n            </Link>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"SearchBar_cast__DKViS\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport css from './SearchBar.module.css';\n\nexport default function SearchBar({ handleSearch }) {\n  const [isActive, setIsActive] = useState(false);\n\n  const handleFocus = () => {\n    setIsActive(true);\n  };\n\n  const handleBlur = () => {\n    setIsActive(false);\n  };\n\n  return (\n    <>\n      <div className={css.search_box}>\n        <input\n          type=\"text\"\n          className={css.search_input}\n          placeholder={isActive ? '' : 'Search for a movie...'}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyUp={event => {\n            if (event.code === 'Enter') {\n              handleSearch(event.target.value);\n            }\n          }}\n        />\n      </div>\n    </>\n  );\n}\n\nSearchBar.propTypes = {\n  handleSearch: PropTypes.func.isRequired,\n};\n","import css from './Movies.module.css';\nimport { useState, useEffect } from 'react';\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\n\nexport default function Movies() {\n  const [query, setQuery] = useState('');\n  const [searchMovies, setSearchMovies] = useState([]);\n\n  const handleSearch = event => {\n    setQuery(event);\n  };\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=ce0c06de642193a801e7421c7d30b9dd`\n    )\n      .then(response => response.json())\n      .then(response => {\n        setSearchMovies(response.results);\n      })\n      .catch(error => console.error(error));\n  }, [query]);\n\n  return (\n    <>\n      <div className={css.movie_container}>\n        <h1 className={css.movie_title}>Search movies</h1>\n        {searchMovies.length === 0 ? (\n          <SearchBar handleSearch={handleSearch} />\n        ) : (\n          ''\n        )}\n        <MoviesList movies={searchMovies} />\n      </div>\n    </>\n  );\n}\n"],"names":["MoviesList","_ref","movies","_jsx","_Fragment","children","className","css","map","movie","Link","to","concat","id","_jsxs","src","poster_path","alt","title","width","SearchBar","handleSearch","_useState","useState","_useState2","_slicedToArray","isActive","setIsActive","type","placeholder","onFocus","onBlur","onKeyUp","event","code","target","value","Movies","query","setQuery","_useState3","_useState4","searchMovies","setSearchMovies","useEffect","fetch","then","response","json","results","catch","error","console","length"],"sourceRoot":""}